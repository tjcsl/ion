import os
import datetime
import raven

from . import OAUTH2_PROVIDER, VIRTUAL_ENV

SECRET_KEY = "{{ secret_key }}"
SECRET_DATABASE_URL = "postgres://ion:@{{ postgres_password }}@ion-db:5432/ion"

REDIS_HOST = "ion-db"
REDIS_PORT = 6379
REDIS_PASSWORD = "{{ redis_password }}"
CACHEOPS_REDIS = {"host": REDIS_HOST, "port": REDIS_PORT, "password": REDIS_PASSWORD, "db": 1, "socket_timeout": 1}
SESSION_REDIS = {
    'host': REDIS_HOST,
    'port': REDIS_PORT,
    'db': 0,
    'password': REDIS_PASSWORD,
    'prefix': VIRTUAL_ENV + ':session',
    'socket_timeout': 1,
}

MASTER_PASSWORD = XXXX
AUTHUSER_PASSWORD = XXXX

ADMINS = (("Name", "email-address@tjhsst.edu"),)

EMAIL_ANNOUNCEMENTS = True

ENABLE_WAITLIST = False

SENTRY_USE_X_FORWARDED_FOR = True

DATA_UPLOAD_MAX_NUMBER_FIELDS = 2500

SCHOOL_START_DATE = datetime.date(1970, 1, 1)

#############
# Optional: #
#############

# GCM_PROJECT_ID = 0000
# GCM_AUTH_KEY = "XXXX"

#TWITTER_KEYS = {
#    "consumer_key": "<key>",
#    "consumer_secret": "<secret>",
#    "access_token_key": "<key>",
#    "access_token_secret": "<secret>"
#}

# LOGIN_WARNING = "Login warning"

# GLOBAL_WARNING = "Global warning"

NOMINATION_POSITION = "Test Nomination"

RAVEN_CONFIG = {
    'dsn': 'https://<key>:<secret>@sentry.domain/<project>',
    'release': raven.fetch_git_sha(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))),
    'site': 'ion.tjhsst.edu'
}

SENTRY_PUBLIC_DSN = 'https://<key>@sentry.domain/project'

NOMINATIONS_ACTIVE = False

OAUTH2_PROVIDER['ALLOWED_REDIRECT_URI_SCHEMES'] = ["http", "https"]

HOCO_START_DATE = datetime.date(1970, 1, 1)
HOCO_END_DATE = datetime.date(1970, 1, 15)
